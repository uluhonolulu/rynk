/**
 * Write your model definitions here
 */

namespace org.rynk

participant User identified by userName {
  o String userName
}

/** to avoid double voting, we store all voters */
asset Voter identified by userName {
  o String userName
}

/* all items to be voted for, like, names of presidential candidates */
asset Choice identified by name {
  o String name
}

/* all vote results -- this is what we count at the end of the vote */
asset VotedChoice identified by id {
  o String id
  --> Choice votedChoice optional
}

/* an act of voting */
transaction Vote {
  --> Choice votedChoice
}

/* checking whether we can vote */
transaction CanVote {
  o CanVoteInput input
}

event CanVoteResult {
  o Boolean result
}

/* A dummy input concept for CanVote() */
concept CanVoteInput {

}

transaction GetVoteResults {
  o GetVoteResultsInput input
}

concept GetVoteResultsInput {

}

concept ChoiceAndVoteCount {
  o String choiceName
  o Integer count
}

event GetVoteResultsResult {
  o ChoiceAndVoteCount[] result
  o String error optional
}
